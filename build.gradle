buildscript {
    dependencies {
        classpath("com.google.dagger:hilt-android-gradle-plugin:2.42")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.0")
    }
}

plugins {
    id 'com.android.application' version '7.1.3' apply false
    id 'com.android.library' version '7.1.3' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.0' apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.0' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.7.0' apply false
}

ext {
    compileSdkVersion = 32
    minSdkVersion = 23
    targetSdkVersion = 32
    jvmTarget = '1.8'

    versions = [
            accompanist            : '0.24.7-alpha',
            coil                   : '2.0.0-rc03',
            compose                : '1.3.0-alpha01',
            corektx                : '1.9.0-alpha05',
            coroutines             : '1.6.1',
            hilt                   : '2.42',
            hiltNavigation         : '1.0.0',
            okhttp                 : '4.9.3',
            retrofit               : '2.9.0',
            serialization          : '1.3.2',
            serializationConverter : '0.8.0',
        ]
}

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        def isAndroidApp = "com.android.build.gradle.AppPlugin" == plugin.class.name
        def isAndroidLibrary = "com.android.build.gradle.LibraryPlugin" == plugin.class.name

        if (isAndroidApp || isAndroidLibrary) {
            project.android {
                buildFeatures.viewBinding true
                buildFeatures.compose true

                compileSdkVersion rootProject.ext.compileSdkVersion
                defaultConfig.minSdkVersion rootProject.ext.minSdkVersion
                defaultConfig.targetSdkVersion rootProject.ext.targetSdkVersion

                defaultConfig.vectorDrawables.useSupportLibrary = true

                compileOptions.sourceCompatibility JavaVersion.VERSION_1_8
                compileOptions.targetCompatibility JavaVersion.VERSION_1_8

                packagingOptions {
                    exclude "META-INF/licenses/**"
                    exclude "META-INF/AL2.0"
                    exclude "META-INF/LGPL2.1"
                }
            }
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += ["-P", "plugin:androidx.compose.compiler.plugins.kotlin:suppressKotlinVersionCompatibilityCheck=true"]
            freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
            freeCompilerArgs += '-opt-in=kotlinx.serialization.ExperimentalSerializationApi'
            freeCompilerArgs += '-opt-in=kotlinx.coroutines.FlowPreview'
            freeCompilerArgs += '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
            freeCompilerArgs += '-opt-in=com.google.accompanist.pager.ExperimentalPagerApi'
            freeCompilerArgs += '-opt-in=com.google.accompanist.permissions.ExperimentalPermissionsApi'
            freeCompilerArgs += '-opt-in=androidx.compose.material3.ExperimentalMaterial3Api'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}